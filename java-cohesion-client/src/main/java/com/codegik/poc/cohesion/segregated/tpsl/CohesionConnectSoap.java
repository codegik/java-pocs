
package com.codegik.poc.cohesion.segregated.tpsl;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.3.2
 * Generated source version: 2.2
 * 
 */
@WebService(name = "CohesionConnectSoap", targetNamespace = "http://fidelityifs.com/webservices")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface CohesionConnectSoap {


    /**
     * Connects the station to MISER. Requires the web service to be configured using Identity mode and NT authentication.
     * 
     * @param cashBoxNbr
     * @param pin
     * @param tellerNbr
     * @param stationName
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "Logon", action = "http://fidelityifs.com/webservices/Logon")
    @WebResult(name = "LogonResult", targetNamespace = "http://fidelityifs.com/webservices")
    @RequestWrapper(localName = "Logon", targetNamespace = "http://fidelityifs.com/webservices", className = "com.lendingclub.cohesion.tpsl.Logon")
    @ResponseWrapper(localName = "LogonResponse", targetNamespace = "http://fidelityifs.com/webservices", className = "com.lendingclub.cohesion.tpsl.LogonResponse")
    public String logon(
        @WebParam(name = "stationName", targetNamespace = "http://fidelityifs.com/webservices")
        String stationName,
        @WebParam(name = "tellerNbr", targetNamespace = "http://fidelityifs.com/webservices")
        String tellerNbr,
        @WebParam(name = "pin", targetNamespace = "http://fidelityifs.com/webservices")
        String pin,
        @WebParam(name = "cashBoxNbr", targetNamespace = "http://fidelityifs.com/webservices")
        String cashBoxNbr);

    /**
     * Disconnects the station from MISER. Requires the web service to be configured using Identity mode and NT authentication.
     * 
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "Logoff", action = "http://fidelityifs.com/webservices/Logoff")
    @WebResult(name = "LogoffResult", targetNamespace = "http://fidelityifs.com/webservices")
    @RequestWrapper(localName = "Logoff", targetNamespace = "http://fidelityifs.com/webservices", className = "com.lendingclub.cohesion.tpsl.Logoff")
    @ResponseWrapper(localName = "LogoffResponse", targetNamespace = "http://fidelityifs.com/webservices", className = "com.lendingclub.cohesion.tpsl.LogoffResponse")
    public boolean logoff();

    /**
     * Returns true if a connection exists for the user. Requires the web service to configured using Identity mode and NT authentication.
     * 
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "IsSessionPresent", action = "http://fidelityifs.com/webservices/IsSessionPresent")
    @WebResult(name = "IsSessionPresentResult", targetNamespace = "http://fidelityifs.com/webservices")
    @RequestWrapper(localName = "IsSessionPresent", targetNamespace = "http://fidelityifs.com/webservices", className = "com.lendingclub.cohesion.tpsl.IsSessionPresent")
    @ResponseWrapper(localName = "IsSessionPresentResponse", targetNamespace = "http://fidelityifs.com/webservices", className = "com.lendingclub.cohesion.tpsl.IsSessionPresentResponse")
    public boolean isSessionPresent();

    /**
     * Executes the specified MISER transaction and gets the reply.
     * 
     * @param sTran
     * @return
     *     returns com.lendingclub.cohesion.tpsl.GetHostReplyResult
     */
    @WebMethod(operationName = "GetHostReply", action = "http://fidelityifs.com/webservices/GetHostReply")
    @WebResult(name = "GetHostReplyResult", targetNamespace = "http://fidelityifs.com/webservices")
    @RequestWrapper(localName = "GetHostReply", targetNamespace = "http://fidelityifs.com/webservices", className = "com.lendingclub.cohesion.tpsl.GetHostReply")
    @ResponseWrapper(localName = "GetHostReplyResponse", targetNamespace = "http://fidelityifs.com/webservices", className = "com.lendingclub.cohesion.tpsl.GetHostReplyResponse")
    public GetHostReplyResult getHostReply(
        @WebParam(name = "sTran", targetNamespace = "http://fidelityifs.com/webservices")
        STran sTran);

    /**
     * Connects the station to MISER. Only valid when operating in Identity mode. Used without NT authentication.
     * 
     * @param station
     * @return
     *     returns com.lendingclub.cohesion.tpsl.LogonResult
     */
    @WebMethod(operationName = "SessionCreate", action = "http://fidelityifs.com/webservices/SessionCreate")
    @WebResult(name = "SessionCreateResult", targetNamespace = "http://fidelityifs.com/webservices")
    @RequestWrapper(localName = "SessionCreate", targetNamespace = "http://fidelityifs.com/webservices", className = "com.lendingclub.cohesion.tpsl.SessionCreate")
    @ResponseWrapper(localName = "SessionCreateResponse", targetNamespace = "http://fidelityifs.com/webservices", className = "com.lendingclub.cohesion.tpsl.SessionCreateResponse")
    public LogonResult sessionCreate(
        @WebParam(name = "station", targetNamespace = "http://fidelityifs.com/webservices")
        MiserStation station);

    /**
     * Disconnects the station from MISER. Inactivates teller. Only valid when operating in Identity mode.
     * 
     * @param sessionID
     */
    @WebMethod(operationName = "SessionEnd", action = "http://fidelityifs.com/webservices/SessionEnd")
    @RequestWrapper(localName = "SessionEnd", targetNamespace = "http://fidelityifs.com/webservices", className = "com.lendingclub.cohesion.tpsl.SessionEnd")
    @ResponseWrapper(localName = "SessionEndResponse", targetNamespace = "http://fidelityifs.com/webservices", className = "com.lendingclub.cohesion.tpsl.SessionEndResponse")
    public void sessionEnd(
        @WebParam(name = "sessionID", targetNamespace = "http://fidelityifs.com/webservices")
        String sessionID);

    /**
     * Disconnects the station from MISER. Allows control over inactivating teller. Only valid when operating in Identity mode.
     * 
     * @param sessionID
     * @param inactivateTeller
     */
    @WebMethod(operationName = "SessionDisconnect", action = "http://fidelityifs.com/webservices/SessionDisconnect")
    @RequestWrapper(localName = "SessionDisconnect", targetNamespace = "http://fidelityifs.com/webservices", className = "com.lendingclub.cohesion.tpsl.SessionDisconnect")
    @ResponseWrapper(localName = "SessionDisconnectResponse", targetNamespace = "http://fidelityifs.com/webservices", className = "com.lendingclub.cohesion.tpsl.SessionDisconnectResponse")
    public void sessionDisconnect(
        @WebParam(name = "sessionID", targetNamespace = "http://fidelityifs.com/webservices")
        String sessionID,
        @WebParam(name = "inactivateTeller", targetNamespace = "http://fidelityifs.com/webservices")
        boolean inactivateTeller);

    /**
     * Executes the specified MISER transaction and gets the reply. Requires a session identifier.
     * 
     * @param sTran
     * @param sessionID
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "SessionGetHostReply", action = "http://fidelityifs.com/webservices/SessionGetHostReply")
    @WebResult(name = "SessionGetHostReplyResult", targetNamespace = "http://fidelityifs.com/webservices")
    @RequestWrapper(localName = "SessionGetHostReply", targetNamespace = "http://fidelityifs.com/webservices", className = "com.lendingclub.cohesion.tpsl.SessionGetHostReply")
    @ResponseWrapper(localName = "SessionGetHostReplyResponse", targetNamespace = "http://fidelityifs.com/webservices", className = "com.lendingclub.cohesion.tpsl.SessionGetHostReplyResponse")
    public String sessionGetHostReply(
        @WebParam(name = "sessionID", targetNamespace = "http://fidelityifs.com/webservices")
        String sessionID,
        @WebParam(name = "sTran", targetNamespace = "http://fidelityifs.com/webservices")
        String sTran);

}
